name: CI/CD Pipeline with Security Scans

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-scan:
    runs-on: self-hosted  # ← use your local runner so localhost:3100 works

    steps:
      # 🧩 Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # 🐍 Set up Python for tests
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 📦 Install dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 🧪 Run basic tests (optional)
      - name: Run tests
        run: pytest || echo "No tests found, skipping..."

      # 🐳 Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kali-test:${{ github.sha }} .

      # 🔍 Scan image with Trivy
      - name: Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/kali-test:${{ github.sha }}
          severity: CRITICAL,HIGH
          format: 'sarif'
          output: trivy-report.sarif
          ignore-unfixed: true
          exit-code: 0

      # 🧠 Scan image with Grype
      - name: Grype vulnerability scan
        uses: anchore/scan-action@v3
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/kali-test:${{ github.sha }}
          severity-cutoff: high
          fail-build: false
          output-format: sarif
          output-file: grype-report.sarif

      # 💾 Upload vulnerability reports as artifacts
      - name: Upload security scan reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            trivy-report.sarif
            grype-report.sarif

      # 🐋 Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 📤 Push vulnerability logs to Loki
      - name: Push Trivy and Grype reports to Loki
        if: always()  # ensures logs are sent even if a scan fails
        run: |
          echo "Sending reports to Loki..."
          for report in trivy-report.sarif grype-report.sarif; do
            if [ -f "$report" ]; then
              curl -s -X POST http://localhost:3100/loki/api/v1/push \
                -H "Content-Type: application/json" \
                --data-raw "{
                  \"streams\": [
                    {
                      \"stream\": {\"job\": \"github-ci\", \"tool\": \"$report\"},
                      \"values\": [
                        [\"$(date +%s%N)\", \"$(cat $report | jq -c . | head -c 6000)\"] 
                      ]
                    }
                  ]
                }"
            else
              echo "⚠️ Report $report not found, skipping..."
            fi
          done

      # 🚀 Push image to DockerHub (only if all scans pass)
      - name: Push Docker image
        if: success()
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/kali-test:${{ github.sha }}
